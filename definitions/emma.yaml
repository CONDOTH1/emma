openapi: '3.0.0'
info:
  version: 0.0.1
  title: Emma
  description: Challenge to fetch insights for user spending
  termsOfService: http://swagger.io/terms/
  contact:
    name: Swagger API Team
    email: apiteam@swagger.io
    url: http://swagger.io
servers:
  - url: http://localhost:3000/emma/
paths:
  /healthcheck/ping:
    get:
      description: Returns the state of liveliness for the service
      operationId: ping
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: OK
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /healthcheck/ready:
    get:
      description: Returns the state of readiness for the service
      operationId: ready
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                    example: OK
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /users/{userId}/spend:
    get:
      description: Returns a given users spend, over given time period by merchant, with comparison to others spend by merchant
      operationId: get user spend
      parameters:
        - $ref: '#/components/parameters/userId'
        - $ref: '#/components/parameters/fromDate'
        - $ref: '#/components/parameters/toDate'
      responses:
        '200':
          description: User spend insight, returns user spend over time period by merchant and the percentile of spend by merchant
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpendInsight'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
components:
  responses:
    '404':
      description: Not Found Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotFoundError'
    '500':
      description: Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InternalServerError'
    default:
      description: Invalid Request Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InvalidRequestError'
  parameters:
    fromDate:
      name: fromDate
      required: true
      in: query
      description: Date to get spend insight from
      schema:
        type: string
        format: date-time
    toDate:
      name: toDate
      required: true
      in: query
      description: Date to get spend insight to
      schema:
        type: string
        format: date-time
    userId:
      in: path
      name: userId
      schema:
        type: string
        format: uuid
      required: true
      description: unique user identifier
  schemas:
    SpendInsight:
      title: Get User Spend Insight
      type: array
      items:
        type: object
        additionalProperties: false
        properties:
          merchantId:
            type: string
            format: uuid
            description: merchant unique identifier
          userId:
            type: string
            format: uuid
            description: user unique identifier
          amount:
            type: number
            description: amount spent over time period by merchant
          pctRank:
            type: number
            description: the user spend percentile by merchant by time period
          Merchant: 
            type: object
            additionalProperties: false
            description: Merchant object
            properties:
              displayName:
                type: string
                description: merchant display name
    NotFoundError:
      title: Not Found Error
      additionalProperties: false
      required:
        - message
        - details
      properties:
        message:
          type: string
        details:
          type: string
    InvalidRequestError:
      additionalProperties: false
      required:
        - message
        - details
      properties:
        message:
          type: string
        details:
          type: string
    InternalServerError:
      title: Internal Server Error
      required:
        - message
        - details
      properties:
        message:
          type: string
        details:
          type: string
